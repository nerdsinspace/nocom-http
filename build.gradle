import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    ext {
        dependencyManagementPluginVersion = project.property('bs.spring.dependency.management.version')
        springBootVersion = project.property('bs.spring.boot.plugin.version')
        jooqPluginVersion = project.property('bs.jooq.plugin')

        log4jVersion = project.property('log4j.version')
        guavaVersion = project.property('guava.version')
        apachePoiVersion = project.property('apache.poi.version')
        xerialSqliteVersion = project.property('xerial.sqlite.version')
    }
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath("io.spring.gradle:dependency-management-plugin:${dependencyManagementPluginVersion}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("nu.studer:gradle-jooq-plugin:${jooqPluginVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: 'nu.studer.jooq'

group 'com.matt.nocom'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    compile.exclude module: 'spring-boot-starter-logging'
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    }
}

jooq {
    version = '3.11.8'
    edition = 'OSS'
    sqlite(sourceSets.main) {
        jdbc {
            driver = 'org.sqlite.JDBC'
            url = "jdbc:sqlite:${System.properties['user.dir']}/${project.property('db.path')}"
        }
        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            strategy {
                name = 'org.jooq.codegen.DefaultGeneratorStrategy'
            }
            database {
                //name = 'org.jooq.meta.sqlite.SQLiteDatabase'
                name = 'org.jooq.meta.extensions.ddl.DDLDatabase'
                properties {
                    property {
                        key = 'scripts'
                        value = 'src/main/resources/database.schema.sql'
                    }
                    property {
                        key = 'sort'
                        value = 'semantic'
                    }
                }

                inputSchema = 'PUBLIC'
                outputSchemaToDefault = true
            }
            generate {}
            target {
                packageName = 'com.matt.nocom.server.sqlite'
            }
        }
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-log4j2')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-jdbc')

    compile group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect'

    // Thymeleaf
    compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity4', version: '3.0.4.RELEASE'

    // Log4J2
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4jVersion
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4jVersion
    compile group: 'org.apache.logging.log4j', name: 'log4j-web', version: log4jVersion
    
    // Google commons
    compile group: 'com.google.guava', name: 'guava', version: guavaVersion
    
    // Spread sheet building
    compile group: 'org.apache.poi', name: 'poi', version: apachePoiVersion
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: apachePoiVersion
    
    // SQLite driver
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: xerialSqliteVersion
    jooqRuntime group: 'org.xerial', name: 'sqlite-jdbc', version: xerialSqliteVersion
    jooqRuntime group: 'org.jooq', name: 'jooq-meta-extensions'
    
    // jOOQ
    compile group: 'org.jooq', name: 'jooq'
    compile group: 'org.jooq', name: 'jooq-meta'
    compile group: 'org.jooq', name: 'jooq-codegen'

    compileOnly('org.projectlombok:lombok')

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

processResources {
    filesMatching('**/*.properties') {
        filter ReplaceTokens, tokens: [
                'db.path': project.property('db.path')
        ]
    }
}

bootRun {
    jvmArgs = ['-Dnocom.auth.debug=true']
}