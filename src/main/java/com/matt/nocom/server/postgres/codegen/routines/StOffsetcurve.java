/*
 * This file is generated by jOOQ.
 */
package com.matt.nocom.server.postgres.codegen.routines;


import com.matt.nocom.server.postgres.codegen.DefaultSchema;
import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.Internal;

import javax.annotation.processing.Generated;



/**
 * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
 */
@java.lang.Deprecated
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StOffsetcurve extends AbstractRoutine<Object> {

    private static final long serialVersionUID = -547624581;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"geometry\""), false, false);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> LINE = Internal.createParameter("line", org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"geometry\""), false, false);

    /**
     * The parameter <code>st_offsetcurve.distance</code>.
     */
    public static final Parameter<Double> DISTANCE = Internal.createParameter("distance", org.jooq.impl.SQLDataType.DOUBLE, false, false);

    /**
     * The parameter <code>st_offsetcurve.params</code>.
     */
    public static final Parameter<String> PARAMS = Internal.createParameter("params", org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("''::text", org.jooq.impl.SQLDataType.CLOB)), true, false);

    /**
     * Create a new routine call instance
     */
    public StOffsetcurve() {
        super("st_offsetcurve", DefaultSchema.DEFAULT_SCHEMA, org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"geometry\""));

        setReturnParameter(RETURN_VALUE);
        addInParameter(LINE);
        addInParameter(DISTANCE);
        addInParameter(PARAMS);
    }

    /**
     * Set the <code>line</code> parameter IN value to the routine
     */
    public void setLine(Object value) {
        setValue(LINE, value);
    }

    /**
     * Set the <code>line</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setLine(Field<Object> field) {
        setField(LINE, field);
    }

    /**
     * Set the <code>distance</code> parameter IN value to the routine
     */
    public void setDistance(Double value) {
        setValue(DISTANCE, value);
    }

    /**
     * Set the <code>distance</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setDistance(Field<Double> field) {
        setField(DISTANCE, field);
    }

    /**
     * Set the <code>params</code> parameter IN value to the routine
     */
    public void setParams(String value) {
        setValue(PARAMS, value);
    }

    /**
     * Set the <code>params</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setParams(Field<String> field) {
        setField(PARAMS, field);
    }
}
