/*
 * This file is generated by jOOQ.
 */
package com.matt.nocom.server.postgres.codegen.udt;


import com.matt.nocom.server.postgres.codegen.DefaultSchema;
import com.matt.nocom.server.postgres.codegen.udt.records.GeometryDumpRecord;
import org.jooq.Schema;
import org.jooq.UDTField;
import org.jooq.impl.DSL;
import org.jooq.impl.SchemaImpl;
import org.jooq.impl.UDTImpl;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GeometryDump extends UDTImpl<GeometryDumpRecord> {

    private static final long serialVersionUID = -328494914;

    /**
     * The reference instance of <code>geometry_dump</code>
     */
    public static final GeometryDump GEOMETRY_DUMP = new GeometryDump();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GeometryDumpRecord> getRecordType() {
        return GeometryDumpRecord.class;
    }

    /**
     * The attribute <code>geometry_dump.path</code>.
     */
    public static final UDTField<GeometryDumpRecord, Integer[]> PATH = createField(DSL.name("path"), org.jooq.impl.SQLDataType.INTEGER.getArrayDataType(), GEOMETRY_DUMP, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final UDTField<GeometryDumpRecord, Object> GEOM = createField(DSL.name("geom"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"geometry\""), GEOMETRY_DUMP, "");

    /**
     * No further instances allowed
     */
    private GeometryDump() {
        super("geometry_dump", null, null, false);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA != null ? DefaultSchema.DEFAULT_SCHEMA : new SchemaImpl(DSL.name(""));
    }
}
