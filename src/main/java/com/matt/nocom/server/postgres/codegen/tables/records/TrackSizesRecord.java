/*
 * This file is generated by jOOQ.
 */
package com.matt.nocom.server.postgres.codegen.tables.records;


import com.matt.nocom.server.postgres.codegen.tables.TrackSizes;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TrackSizesRecord extends TableRecordImpl<TrackSizesRecord> implements Record2<Integer, Long> {

    private static final long serialVersionUID = 1205754262;

    /**
     * Setter for <code>track_sizes.track_id</code>.
     */
    public void setTrackId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>track_sizes.track_id</code>.
     */
    public Integer getTrackId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>track_sizes.cnt</code>.
     */
    public void setCnt(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>track_sizes.cnt</code>.
     */
    public Long getCnt() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TrackSizes.TRACK_SIZES.TRACK_ID;
    }

    @Override
    public Field<Long> field2() {
        return TrackSizes.TRACK_SIZES.CNT;
    }

    @Override
    public Integer component1() {
        return getTrackId();
    }

    @Override
    public Long component2() {
        return getCnt();
    }

    @Override
    public Integer value1() {
        return getTrackId();
    }

    @Override
    public Long value2() {
        return getCnt();
    }

    @Override
    public TrackSizesRecord value1(Integer value) {
        setTrackId(value);
        return this;
    }

    @Override
    public TrackSizesRecord value2(Long value) {
        setCnt(value);
        return this;
    }

    @Override
    public TrackSizesRecord values(Integer value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TrackSizesRecord
     */
    public TrackSizesRecord() {
        super(TrackSizes.TRACK_SIZES);
    }

    /**
     * Create a detached, initialised TrackSizesRecord
     */
    public TrackSizesRecord(Integer trackId, Long cnt) {
        super(TrackSizes.TRACK_SIZES);

        set(0, trackId);
        set(1, cnt);
    }
}
