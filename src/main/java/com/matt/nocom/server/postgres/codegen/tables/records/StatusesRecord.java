/*
 * This file is generated by jOOQ.
 */
package com.matt.nocom.server.postgres.codegen.tables.records;


import com.matt.nocom.server.postgres.codegen.enums.StatusesEnum;
import com.matt.nocom.server.postgres.codegen.tables.Statuses;
import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StatusesRecord extends TableRecordImpl<StatusesRecord> implements Record6<Integer, StatusesEnum, Long, String, Short, Short> {

    private static final long serialVersionUID = -818082383;

    /**
     * Setter for <code>statuses.player_id</code>.
     */
    public void setPlayerId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>statuses.player_id</code>.
     */
    public Integer getPlayerId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>statuses.curr_status</code>.
     */
    public void setCurrStatus(StatusesEnum value) {
        set(1, value);
    }

    /**
     * Getter for <code>statuses.curr_status</code>.
     */
    public StatusesEnum getCurrStatus() {
        return (StatusesEnum) get(1);
    }

    /**
     * Setter for <code>statuses.updated_at</code>.
     */
    public void setUpdatedAt(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>statuses.updated_at</code>.
     */
    public Long getUpdatedAt() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>statuses.data</code>.
     */
    public void setData(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>statuses.data</code>.
     */
    public String getData() {
        return (String) get(3);
    }

    /**
     * Setter for <code>statuses.server_id</code>.
     */
    public void setServerId(Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>statuses.server_id</code>.
     */
    public Short getServerId() {
        return (Short) get(4);
    }

    /**
     * Setter for <code>statuses.dimension</code>.
     */
    public void setDimension(Short value) {
        set(5, value);
    }

    /**
     * Getter for <code>statuses.dimension</code>.
     */
    public Short getDimension() {
        return (Short) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, StatusesEnum, Long, String, Short, Short> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, StatusesEnum, Long, String, Short, Short> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Statuses.STATUSES.PLAYER_ID;
    }

    @Override
    public Field<StatusesEnum> field2() {
        return Statuses.STATUSES.CURR_STATUS;
    }

    @Override
    public Field<Long> field3() {
        return Statuses.STATUSES.UPDATED_AT;
    }

    @Override
    public Field<String> field4() {
        return Statuses.STATUSES.DATA;
    }

    @Override
    public Field<Short> field5() {
        return Statuses.STATUSES.SERVER_ID;
    }

    @Override
    public Field<Short> field6() {
        return Statuses.STATUSES.DIMENSION;
    }

    @Override
    public Integer component1() {
        return getPlayerId();
    }

    @Override
    public StatusesEnum component2() {
        return getCurrStatus();
    }

    @Override
    public Long component3() {
        return getUpdatedAt();
    }

    @Override
    public String component4() {
        return getData();
    }

    @Override
    public Short component5() {
        return getServerId();
    }

    @Override
    public Short component6() {
        return getDimension();
    }

    @Override
    public Integer value1() {
        return getPlayerId();
    }

    @Override
    public StatusesEnum value2() {
        return getCurrStatus();
    }

    @Override
    public Long value3() {
        return getUpdatedAt();
    }

    @Override
    public String value4() {
        return getData();
    }

    @Override
    public Short value5() {
        return getServerId();
    }

    @Override
    public Short value6() {
        return getDimension();
    }

    @Override
    public StatusesRecord value1(Integer value) {
        setPlayerId(value);
        return this;
    }

    @Override
    public StatusesRecord value2(StatusesEnum value) {
        setCurrStatus(value);
        return this;
    }

    @Override
    public StatusesRecord value3(Long value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public StatusesRecord value4(String value) {
        setData(value);
        return this;
    }

    @Override
    public StatusesRecord value5(Short value) {
        setServerId(value);
        return this;
    }

    @Override
    public StatusesRecord value6(Short value) {
        setDimension(value);
        return this;
    }

    @Override
    public StatusesRecord values(Integer value1, StatusesEnum value2, Long value3, String value4, Short value5, Short value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StatusesRecord
     */
    public StatusesRecord() {
        super(Statuses.STATUSES);
    }

    /**
     * Create a detached, initialised StatusesRecord
     */
    public StatusesRecord(Integer playerId, StatusesEnum currStatus, Long updatedAt, String data, Short serverId, Short dimension) {
        super(Statuses.STATUSES);

        set(0, playerId);
        set(1, currStatus);
        set(2, updatedAt);
        set(3, data);
        set(4, serverId);
        set(5, dimension);
    }
}
