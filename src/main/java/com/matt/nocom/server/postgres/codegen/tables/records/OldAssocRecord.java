/*
 * This file is generated by jOOQ.
 */
package com.matt.nocom.server.postgres.codegen.tables.records;


import com.matt.nocom.server.postgres.codegen.tables.OldAssoc;
import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OldAssocRecord extends TableRecordImpl<OldAssocRecord> implements Record3<String, Integer, Double> {

    private static final long serialVersionUID = -216885675;

    /**
     * Setter for <code>old_assoc.username</code>.
     */
    public void setUsername(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>old_assoc.username</code>.
     */
    public String getUsername() {
        return (String) get(0);
    }

    /**
     * Setter for <code>old_assoc.cluster_id</code>.
     */
    public void setClusterId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>old_assoc.cluster_id</code>.
     */
    public Integer getClusterId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>old_assoc.association</code>.
     */
    public void setAssociation(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>old_assoc.association</code>.
     */
    public Double getAssociation() {
        return (Double) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, Integer, Double> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, Integer, Double> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return OldAssoc.OLD_ASSOC.USERNAME;
    }

    @Override
    public Field<Integer> field2() {
        return OldAssoc.OLD_ASSOC.CLUSTER_ID;
    }

    @Override
    public Field<Double> field3() {
        return OldAssoc.OLD_ASSOC.ASSOCIATION;
    }

    @Override
    public String component1() {
        return getUsername();
    }

    @Override
    public Integer component2() {
        return getClusterId();
    }

    @Override
    public Double component3() {
        return getAssociation();
    }

    @Override
    public String value1() {
        return getUsername();
    }

    @Override
    public Integer value2() {
        return getClusterId();
    }

    @Override
    public Double value3() {
        return getAssociation();
    }

    @Override
    public OldAssocRecord value1(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public OldAssocRecord value2(Integer value) {
        setClusterId(value);
        return this;
    }

    @Override
    public OldAssocRecord value3(Double value) {
        setAssociation(value);
        return this;
    }

    @Override
    public OldAssocRecord values(String value1, Integer value2, Double value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OldAssocRecord
     */
    public OldAssocRecord() {
        super(OldAssoc.OLD_ASSOC);
    }

    /**
     * Create a detached, initialised OldAssocRecord
     */
    public OldAssocRecord(String username, Integer clusterId, Double association) {
        super(OldAssoc.OLD_ASSOC);

        set(0, username);
        set(1, clusterId);
        set(2, association);
    }
}
