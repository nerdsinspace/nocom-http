/*
 * This file is generated by jOOQ.
 */
package com.matt.nocom.server.postgres.codegen.tables.records;


import com.matt.nocom.server.postgres.codegen.tables.Tracks;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TracksRecord extends UpdatableRecordImpl<TracksRecord> implements Record8<Integer, Long, Long, Long, Short, Short, Integer, Boolean> {

    private static final long serialVersionUID = 1137672280;

    /**
     * Setter for <code>tracks.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>tracks.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>tracks.first_hit_id</code>.
     */
    public void setFirstHitId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>tracks.first_hit_id</code>.
     */
    public Long getFirstHitId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>tracks.last_hit_id</code>.
     */
    public void setLastHitId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>tracks.last_hit_id</code>.
     */
    public Long getLastHitId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>tracks.updated_at</code>.
     */
    public void setUpdatedAt(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>tracks.updated_at</code>.
     */
    public Long getUpdatedAt() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>tracks.dimension</code>.
     */
    public void setDimension(Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>tracks.dimension</code>.
     */
    public Short getDimension() {
        return (Short) get(4);
    }

    /**
     * Setter for <code>tracks.server_id</code>.
     */
    public void setServerId(Short value) {
        set(5, value);
    }

    /**
     * Getter for <code>tracks.server_id</code>.
     */
    public Short getServerId() {
        return (Short) get(5);
    }

    /**
     * Setter for <code>tracks.prev_track_id</code>.
     */
    public void setPrevTrackId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>tracks.prev_track_id</code>.
     */
    public Integer getPrevTrackId() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>tracks.legacy</code>.
     */
    public void setLegacy(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>tracks.legacy</code>.
     */
    public Boolean getLegacy() {
        return (Boolean) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, Long, Long, Long, Short, Short, Integer, Boolean> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, Long, Long, Long, Short, Short, Integer, Boolean> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Tracks.TRACKS.ID;
    }

    @Override
    public Field<Long> field2() {
        return Tracks.TRACKS.FIRST_HIT_ID;
    }

    @Override
    public Field<Long> field3() {
        return Tracks.TRACKS.LAST_HIT_ID;
    }

    @Override
    public Field<Long> field4() {
        return Tracks.TRACKS.UPDATED_AT;
    }

    @Override
    public Field<Short> field5() {
        return Tracks.TRACKS.DIMENSION;
    }

    @Override
    public Field<Short> field6() {
        return Tracks.TRACKS.SERVER_ID;
    }

    @Override
    public Field<Integer> field7() {
        return Tracks.TRACKS.PREV_TRACK_ID;
    }

    @Override
    public Field<Boolean> field8() {
        return Tracks.TRACKS.LEGACY;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getFirstHitId();
    }

    @Override
    public Long component3() {
        return getLastHitId();
    }

    @Override
    public Long component4() {
        return getUpdatedAt();
    }

    @Override
    public Short component5() {
        return getDimension();
    }

    @Override
    public Short component6() {
        return getServerId();
    }

    @Override
    public Integer component7() {
        return getPrevTrackId();
    }

    @Override
    public Boolean component8() {
        return getLegacy();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getFirstHitId();
    }

    @Override
    public Long value3() {
        return getLastHitId();
    }

    @Override
    public Long value4() {
        return getUpdatedAt();
    }

    @Override
    public Short value5() {
        return getDimension();
    }

    @Override
    public Short value6() {
        return getServerId();
    }

    @Override
    public Integer value7() {
        return getPrevTrackId();
    }

    @Override
    public Boolean value8() {
        return getLegacy();
    }

    @Override
    public TracksRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TracksRecord value2(Long value) {
        setFirstHitId(value);
        return this;
    }

    @Override
    public TracksRecord value3(Long value) {
        setLastHitId(value);
        return this;
    }

    @Override
    public TracksRecord value4(Long value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public TracksRecord value5(Short value) {
        setDimension(value);
        return this;
    }

    @Override
    public TracksRecord value6(Short value) {
        setServerId(value);
        return this;
    }

    @Override
    public TracksRecord value7(Integer value) {
        setPrevTrackId(value);
        return this;
    }

    @Override
    public TracksRecord value8(Boolean value) {
        setLegacy(value);
        return this;
    }

    @Override
    public TracksRecord values(Integer value1, Long value2, Long value3, Long value4, Short value5, Short value6, Integer value7, Boolean value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TracksRecord
     */
    public TracksRecord() {
        super(Tracks.TRACKS);
    }

    /**
     * Create a detached, initialised TracksRecord
     */
    public TracksRecord(Integer id, Long firstHitId, Long lastHitId, Long updatedAt, Short dimension, Short serverId, Integer prevTrackId, Boolean legacy) {
        super(Tracks.TRACKS);

        set(0, id);
        set(1, firstHitId);
        set(2, lastHitId);
        set(3, updatedAt);
        set(4, dimension);
        set(5, serverId);
        set(6, prevTrackId);
        set(7, legacy);
    }
}
