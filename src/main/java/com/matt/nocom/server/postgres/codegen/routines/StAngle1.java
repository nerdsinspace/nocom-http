/*
 * This file is generated by jOOQ.
 */
package com.matt.nocom.server.postgres.codegen.routines;


import com.matt.nocom.server.postgres.codegen.DefaultSchema;
import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.Internal;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StAngle1 extends AbstractRoutine<Double> {

    private static final long serialVersionUID = -1151117180;

    /**
     * The parameter <code>st_angle.RETURN_VALUE</code>.
     */
    public static final Parameter<Double> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", org.jooq.impl.SQLDataType.DOUBLE, false, false);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> PT1 = Internal.createParameter("pt1", org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"geometry\""), false, false);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> PT2 = Internal.createParameter("pt2", org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"geometry\""), false, false);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> PT3 = Internal.createParameter("pt3", org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"geometry\""), false, false);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> PT4 = Internal.createParameter("pt4", org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"geometry\"").defaultValue(org.jooq.impl.DSL.field("'0101000000000000000000F87F000000000000F87F'::geometry", org.jooq.impl.SQLDataType.OTHER)), true, false);

    /**
     * Create a new routine call instance
     */
    public StAngle1() {
        super("st_angle", DefaultSchema.DEFAULT_SCHEMA, org.jooq.impl.SQLDataType.DOUBLE);

        setReturnParameter(RETURN_VALUE);
        addInParameter(PT1);
        addInParameter(PT2);
        addInParameter(PT3);
        addInParameter(PT4);
        setOverloaded(true);
    }

    /**
     * Set the <code>pt1</code> parameter IN value to the routine
     */
    public void setPt1(Object value) {
        setValue(PT1, value);
    }

    /**
     * Set the <code>pt1</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPt1(Field<Object> field) {
        setField(PT1, field);
    }

    /**
     * Set the <code>pt2</code> parameter IN value to the routine
     */
    public void setPt2(Object value) {
        setValue(PT2, value);
    }

    /**
     * Set the <code>pt2</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPt2(Field<Object> field) {
        setField(PT2, field);
    }

    /**
     * Set the <code>pt3</code> parameter IN value to the routine
     */
    public void setPt3(Object value) {
        setValue(PT3, value);
    }

    /**
     * Set the <code>pt3</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPt3(Field<Object> field) {
        setField(PT3, field);
    }

    /**
     * Set the <code>pt4</code> parameter IN value to the routine
     */
    public void setPt4(Object value) {
        setValue(PT4, value);
    }

    /**
     * Set the <code>pt4</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPt4(Field<Object> field) {
        setField(PT4, field);
    }
}
