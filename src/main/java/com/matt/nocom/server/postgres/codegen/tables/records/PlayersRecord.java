/*
 * This file is generated by jOOQ.
 */
package com.matt.nocom.server.postgres.codegen.tables.records;


import com.matt.nocom.server.postgres.codegen.tables.Players;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.processing.Generated;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayersRecord extends UpdatableRecordImpl<PlayersRecord> implements Record3<Integer, UUID, String> {

    private static final long serialVersionUID = 1185852527;

    /**
     * Setter for <code>players.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>players.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>players.uuid</code>.
     */
    public void setUuid(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>players.uuid</code>.
     */
    public UUID getUuid() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>players.username</code>.
     */
    public void setUsername(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>players.username</code>.
     */
    public String getUsername() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, UUID, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, UUID, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Players.PLAYERS.ID;
    }

    @Override
    public Field<UUID> field2() {
        return Players.PLAYERS.UUID;
    }

    @Override
    public Field<String> field3() {
        return Players.PLAYERS.USERNAME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getUuid();
    }

    @Override
    public String component3() {
        return getUsername();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getUuid();
    }

    @Override
    public String value3() {
        return getUsername();
    }

    @Override
    public PlayersRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public PlayersRecord value2(UUID value) {
        setUuid(value);
        return this;
    }

    @Override
    public PlayersRecord value3(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public PlayersRecord values(Integer value1, UUID value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlayersRecord
     */
    public PlayersRecord() {
        super(Players.PLAYERS);
    }

    /**
     * Create a detached, initialised PlayersRecord
     */
    public PlayersRecord(Integer id, UUID uuid, String username) {
        super(Players.PLAYERS);

        set(0, id);
        set(1, uuid);
        set(2, username);
    }
}
