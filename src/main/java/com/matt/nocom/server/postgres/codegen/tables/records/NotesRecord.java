/*
 * This file is generated by jOOQ.
 */
package com.matt.nocom.server.postgres.codegen.tables.records;


import com.matt.nocom.server.postgres.codegen.tables.Notes;
import org.jooq.Field;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NotesRecord extends TableRecordImpl<NotesRecord> implements Record7<Integer, Integer, String, Long, Long, Short, Short> {

    private static final long serialVersionUID = 819576467;

    /**
     * Setter for <code>notes.x</code>.
     */
    public void setX(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>notes.x</code>.
     */
    public Integer getX() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>notes.z</code>.
     */
    public void setZ(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>notes.z</code>.
     */
    public Integer getZ() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>notes.data</code>.
     */
    public void setData(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>notes.data</code>.
     */
    public String getData() {
        return (String) get(2);
    }

    /**
     * Setter for <code>notes.created_at</code>.
     */
    public void setCreatedAt(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>notes.created_at</code>.
     */
    public Long getCreatedAt() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>notes.updated_at</code>.
     */
    public void setUpdatedAt(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>notes.updated_at</code>.
     */
    public Long getUpdatedAt() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>notes.dimension</code>.
     */
    public void setDimension(Short value) {
        set(5, value);
    }

    /**
     * Getter for <code>notes.dimension</code>.
     */
    public Short getDimension() {
        return (Short) get(5);
    }

    /**
     * Setter for <code>notes.server_id</code>.
     */
    public void setServerId(Short value) {
        set(6, value);
    }

    /**
     * Getter for <code>notes.server_id</code>.
     */
    public Short getServerId() {
        return (Short) get(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, String, Long, Long, Short, Short> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, Integer, String, Long, Long, Short, Short> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Notes.NOTES.X;
    }

    @Override
    public Field<Integer> field2() {
        return Notes.NOTES.Z;
    }

    @Override
    public Field<String> field3() {
        return Notes.NOTES.DATA;
    }

    @Override
    public Field<Long> field4() {
        return Notes.NOTES.CREATED_AT;
    }

    @Override
    public Field<Long> field5() {
        return Notes.NOTES.UPDATED_AT;
    }

    @Override
    public Field<Short> field6() {
        return Notes.NOTES.DIMENSION;
    }

    @Override
    public Field<Short> field7() {
        return Notes.NOTES.SERVER_ID;
    }

    @Override
    public Integer component1() {
        return getX();
    }

    @Override
    public Integer component2() {
        return getZ();
    }

    @Override
    public String component3() {
        return getData();
    }

    @Override
    public Long component4() {
        return getCreatedAt();
    }

    @Override
    public Long component5() {
        return getUpdatedAt();
    }

    @Override
    public Short component6() {
        return getDimension();
    }

    @Override
    public Short component7() {
        return getServerId();
    }

    @Override
    public Integer value1() {
        return getX();
    }

    @Override
    public Integer value2() {
        return getZ();
    }

    @Override
    public String value3() {
        return getData();
    }

    @Override
    public Long value4() {
        return getCreatedAt();
    }

    @Override
    public Long value5() {
        return getUpdatedAt();
    }

    @Override
    public Short value6() {
        return getDimension();
    }

    @Override
    public Short value7() {
        return getServerId();
    }

    @Override
    public NotesRecord value1(Integer value) {
        setX(value);
        return this;
    }

    @Override
    public NotesRecord value2(Integer value) {
        setZ(value);
        return this;
    }

    @Override
    public NotesRecord value3(String value) {
        setData(value);
        return this;
    }

    @Override
    public NotesRecord value4(Long value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public NotesRecord value5(Long value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public NotesRecord value6(Short value) {
        setDimension(value);
        return this;
    }

    @Override
    public NotesRecord value7(Short value) {
        setServerId(value);
        return this;
    }

    @Override
    public NotesRecord values(Integer value1, Integer value2, String value3, Long value4, Long value5, Short value6, Short value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NotesRecord
     */
    public NotesRecord() {
        super(Notes.NOTES);
    }

    /**
     * Create a detached, initialised NotesRecord
     */
    public NotesRecord(Integer x, Integer z, String data, Long createdAt, Long updatedAt, Short dimension, Short serverId) {
        super(Notes.NOTES);

        set(0, x);
        set(1, z);
        set(2, data);
        set(3, createdAt);
        set(4, updatedAt);
        set(5, dimension);
        set(6, serverId);
    }
}
