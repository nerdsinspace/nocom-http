/*
 * This file is generated by jOOQ.
 */
package com.matt.nocom.server.postgres.codegen.tables.records;


import com.matt.nocom.server.postgres.codegen.tables.OldDbscanToUpdate;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Row1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OldDbscanToUpdateRecord extends UpdatableRecordImpl<OldDbscanToUpdateRecord> implements Record1<Integer> {

    private static final long serialVersionUID = -1052514964;

    /**
     * Setter for <code>old_dbscan_to_update.dbscan_id</code>.
     */
    public void setDbscanId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>old_dbscan_to_update.dbscan_id</code>.
     */
    public Integer getDbscanId() {
        return (Integer) get(0);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record1 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row1<Integer> fieldsRow() {
        return (Row1) super.fieldsRow();
    }

    @Override
    public Row1<Integer> valuesRow() {
        return (Row1) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return OldDbscanToUpdate.OLD_DBSCAN_TO_UPDATE.DBSCAN_ID;
    }

    @Override
    public Integer component1() {
        return getDbscanId();
    }

    @Override
    public Integer value1() {
        return getDbscanId();
    }

    @Override
    public OldDbscanToUpdateRecord value1(Integer value) {
        setDbscanId(value);
        return this;
    }

    @Override
    public OldDbscanToUpdateRecord values(Integer value1) {
        value1(value1);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OldDbscanToUpdateRecord
     */
    public OldDbscanToUpdateRecord() {
        super(OldDbscanToUpdate.OLD_DBSCAN_TO_UPDATE);
    }

    /**
     * Create a detached, initialised OldDbscanToUpdateRecord
     */
    public OldDbscanToUpdateRecord(Integer dbscanId) {
        super(OldDbscanToUpdate.OLD_DBSCAN_TO_UPDATE);

        set(0, dbscanId);
    }
}
