/*
 * This file is generated by jOOQ.
 */
package com.matt.nocom.server.postgres.codegen;


import com.matt.nocom.server.postgres.codegen.tables.*;
import com.matt.nocom.server.postgres.codegen.tables.records.StDumpRecord;
import com.matt.nocom.server.postgres.codegen.tables.records.StDumppointsRecord;
import com.matt.nocom.server.postgres.codegen.tables.records.StDumpringsRecord;
import com.matt.nocom.server.postgres.codegen.tables.records.StSubdivideRecord;
import com.matt.nocom.server.postgres.codegen.udt.GeometryDump;
import com.matt.nocom.server.postgres.codegen.udt.ValidDetail;
import org.jooq.*;
import org.jooq.impl.SchemaImpl;

import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DefaultSchema extends SchemaImpl {

    private static final long serialVersionUID = -901583681;

    /**
     * The reference instance of <code>DEFAULT_SCHEMA</code>
     */
    public static final DefaultSchema DEFAULT_SCHEMA = new DefaultSchema();

    /**
     * The table <code>assoc</code>.
     */
    public final Assoc ASSOC = Assoc.ASSOC;

    /**
     * The table <code>associations</code>.
     */
    public final Associations ASSOCIATIONS = Associations.ASSOCIATIONS;

    /**
     * The table <code>block_states</code>.
     */
    public final BlockStates BLOCK_STATES = BlockStates.BLOCK_STATES;

    /**
     * The table <code>blocks</code>.
     */
    public final Blocks BLOCKS = Blocks.BLOCKS;

    /**
     * The table <code>chat</code>.
     */
    public final Chat CHAT = Chat.CHAT;

    /**
     * The table <code>dbscan</code>.
     */
    public final Dbscan DBSCAN = Dbscan.DBSCAN;

    /**
     * The table <code>dbscan_progress</code>.
     */
    public final DbscanProgress DBSCAN_PROGRESS = DbscanProgress.DBSCAN_PROGRESS;

    /**
     * The table <code>dbscan_to_update</code>.
     */
    public final DbscanToUpdate DBSCAN_TO_UPDATE = DbscanToUpdate.DBSCAN_TO_UPDATE;

    /**
     * The table <code>dimensions</code>.
     */
    public final Dimensions DIMENSIONS = Dimensions.DIMENSIONS;

    /**
     * The table <code>distinct_chat_messages</code>.
     */
    public final DistinctChatMessages DISTINCT_CHAT_MESSAGES = DistinctChatMessages.DISTINCT_CHAT_MESSAGES;

    /**
     * The table <code>geography_columns</code>.
     */
    public final GeographyColumns GEOGRAPHY_COLUMNS = GeographyColumns.GEOGRAPHY_COLUMNS;

    /**
     * The table <code>geometry_columns</code>.
     */
    public final GeometryColumns GEOMETRY_COLUMNS = GeometryColumns.GEOMETRY_COLUMNS;

    /**
     * The table <code>hits</code>.
     */
    public final Hits HITS = Hits.HITS;

    /**
     * The table <code>last_by_server</code>.
     */
    public final LastByServer LAST_BY_SERVER = LastByServer.LAST_BY_SERVER;

    /**
     * The table <code>notes</code>.
     */
    public final Notes NOTES = Notes.NOTES;

    /**
     * The table <code>old_assoc</code>.
     */
    public final OldAssoc OLD_ASSOC = OldAssoc.OLD_ASSOC;

    /**
     * The table <code>old_associations</code>.
     */
    public final OldAssociations OLD_ASSOCIATIONS = OldAssociations.OLD_ASSOCIATIONS;

    /**
     * The table <code>old_dbscan</code>.
     */
    public final OldDbscan OLD_DBSCAN = OldDbscan.OLD_DBSCAN;

    /**
     * The table <code>old_dbscan_progress</code>.
     */
    public final OldDbscanProgress OLD_DBSCAN_PROGRESS = OldDbscanProgress.OLD_DBSCAN_PROGRESS;

    /**
     * The table <code>old_dbscan_to_update</code>.
     */
    public final OldDbscanToUpdate OLD_DBSCAN_TO_UPDATE = OldDbscanToUpdate.OLD_DBSCAN_TO_UPDATE;

    /**
     * The table <code>old_track_associator_progress</code>.
     */
    public final OldTrackAssociatorProgress OLD_TRACK_ASSOCIATOR_PROGRESS = OldTrackAssociatorProgress.OLD_TRACK_ASSOCIATOR_PROGRESS;

    /**
     * The table <code>player_sessions</code>.
     */
    public final PlayerSessions PLAYER_SESSIONS = PlayerSessions.PLAYER_SESSIONS;

    /**
     * The table <code>players</code>.
     */
    public final Players PLAYERS = Players.PLAYERS;

    /**
     * The table <code>servers</code>.
     */
    public final Servers SERVERS = Servers.SERVERS;

    /**
     * The table <code>signs</code>.
     */
    public final Signs SIGNS = Signs.SIGNS;

    /**
     * The table <code>spatial_ref_sys</code>.
     */
    public final SpatialRefSys SPATIAL_REF_SYS = SpatialRefSys.SPATIAL_REF_SYS;

    /**
     * The table <code>st_dump</code>.
     */
    public final StDump ST_DUMP = StDump.ST_DUMP;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<StDumpRecord> ST_DUMP(Configuration configuration, Object __1) {
        return configuration.dsl().selectFrom(com.matt.nocom.server.postgres.codegen.tables.StDump.ST_DUMP.call(__1)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StDump ST_DUMP(Object __1) {
        return com.matt.nocom.server.postgres.codegen.tables.StDump.ST_DUMP.call(__1);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StDump ST_DUMP(Field<Object> __1) {
        return com.matt.nocom.server.postgres.codegen.tables.StDump.ST_DUMP.call(__1);
    }

    /**
     * The table <code>st_dumppoints</code>.
     */
    public final StDumppoints ST_DUMPPOINTS = StDumppoints.ST_DUMPPOINTS;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<StDumppointsRecord> ST_DUMPPOINTS(Configuration configuration, Object __1) {
        return configuration.dsl().selectFrom(com.matt.nocom.server.postgres.codegen.tables.StDumppoints.ST_DUMPPOINTS.call(__1)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StDumppoints ST_DUMPPOINTS(Object __1) {
        return com.matt.nocom.server.postgres.codegen.tables.StDumppoints.ST_DUMPPOINTS.call(__1);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StDumppoints ST_DUMPPOINTS(Field<Object> __1) {
        return com.matt.nocom.server.postgres.codegen.tables.StDumppoints.ST_DUMPPOINTS.call(__1);
    }

    /**
     * The table <code>st_dumprings</code>.
     */
    public final StDumprings ST_DUMPRINGS = StDumprings.ST_DUMPRINGS;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<StDumpringsRecord> ST_DUMPRINGS(Configuration configuration, Object __1) {
        return configuration.dsl().selectFrom(com.matt.nocom.server.postgres.codegen.tables.StDumprings.ST_DUMPRINGS.call(__1)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StDumprings ST_DUMPRINGS(Object __1) {
        return com.matt.nocom.server.postgres.codegen.tables.StDumprings.ST_DUMPRINGS.call(__1);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StDumprings ST_DUMPRINGS(Field<Object> __1) {
        return com.matt.nocom.server.postgres.codegen.tables.StDumprings.ST_DUMPRINGS.call(__1);
    }

    /**
     * The table <code>st_subdivide</code>.
     */
    public final StSubdivide ST_SUBDIVIDE = StSubdivide.ST_SUBDIVIDE;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<StSubdivideRecord> ST_SUBDIVIDE(Configuration configuration, Object geom, Integer maxvertices) {
        return configuration.dsl().selectFrom(com.matt.nocom.server.postgres.codegen.tables.StSubdivide.ST_SUBDIVIDE.call(geom, maxvertices)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StSubdivide ST_SUBDIVIDE(Object geom, Integer maxvertices) {
        return com.matt.nocom.server.postgres.codegen.tables.StSubdivide.ST_SUBDIVIDE.call(geom, maxvertices);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StSubdivide ST_SUBDIVIDE(Field<Object> geom, Field<Integer> maxvertices) {
        return com.matt.nocom.server.postgres.codegen.tables.StSubdivide.ST_SUBDIVIDE.call(geom, maxvertices);
    }

    /**
     * The table <code>statuses</code>.
     */
    public final Statuses STATUSES = Statuses.STATUSES;

    /**
     * The table <code>test</code>.
     */
    public final Test TEST = Test.TEST;

    /**
     * The table <code>track_associator_progress</code>.
     */
    public final TrackAssociatorProgress TRACK_ASSOCIATOR_PROGRESS = TrackAssociatorProgress.TRACK_ASSOCIATOR_PROGRESS;

    /**
     * The table <code>track_sizes</code>.
     */
    public final TrackSizes TRACK_SIZES = TrackSizes.TRACK_SIZES;

    /**
     * The table <code>tracks</code>.
     */
    public final Tracks TRACKS = Tracks.TRACKS;

    /**
     * No further instances allowed
     */
    private DefaultSchema() {
        super("", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        return Arrays.<Sequence<?>>asList(
            Sequences.DBSCAN_ID_SEQ,
            Sequences.DBSCAN_ID_SEQ1,
            Sequences.HITS_ID_SEQ,
            Sequences.PLAYERS_ID_SEQ,
            Sequences.SERVERS_ID_SEQ,
            Sequences.TRACKS_ID_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.<Table<?>>asList(
            Assoc.ASSOC,
            Associations.ASSOCIATIONS,
            BlockStates.BLOCK_STATES,
            Blocks.BLOCKS,
            Chat.CHAT,
            Dbscan.DBSCAN,
            DbscanProgress.DBSCAN_PROGRESS,
            DbscanToUpdate.DBSCAN_TO_UPDATE,
            Dimensions.DIMENSIONS,
            DistinctChatMessages.DISTINCT_CHAT_MESSAGES,
            GeographyColumns.GEOGRAPHY_COLUMNS,
            GeometryColumns.GEOMETRY_COLUMNS,
            Hits.HITS,
            LastByServer.LAST_BY_SERVER,
            Notes.NOTES,
            OldAssoc.OLD_ASSOC,
            OldAssociations.OLD_ASSOCIATIONS,
            OldDbscan.OLD_DBSCAN,
            OldDbscanProgress.OLD_DBSCAN_PROGRESS,
            OldDbscanToUpdate.OLD_DBSCAN_TO_UPDATE,
            OldTrackAssociatorProgress.OLD_TRACK_ASSOCIATOR_PROGRESS,
            PlayerSessions.PLAYER_SESSIONS,
            Players.PLAYERS,
            Servers.SERVERS,
            Signs.SIGNS,
            SpatialRefSys.SPATIAL_REF_SYS,
            StDump.ST_DUMP,
            StDumppoints.ST_DUMPPOINTS,
            StDumprings.ST_DUMPRINGS,
            StSubdivide.ST_SUBDIVIDE,
            Statuses.STATUSES,
            Test.TEST,
            TrackAssociatorProgress.TRACK_ASSOCIATOR_PROGRESS,
            TrackSizes.TRACK_SIZES,
            Tracks.TRACKS);
    }

    @Override
    public final List<UDT<?>> getUDTs() {
        return Arrays.<UDT<?>>asList(
            GeometryDump.GEOMETRY_DUMP,
            ValidDetail.VALID_DETAIL);
    }
}
