/*
 * This file is generated by jOOQ.
 */
package com.matt.nocom.server.postgres.codegen.tables.records;


import com.matt.nocom.server.postgres.codegen.tables.PlayerSessions;
import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;
import org.jooq.lambda.tuple.Range;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerSessionsRecord extends TableRecordImpl<PlayerSessionsRecord> implements Record6<Integer, Short, Long, Long, Range<Long>, Boolean> {

    private static final long serialVersionUID = -232422067;

    /**
     * Setter for <code>player_sessions.player_id</code>.
     */
    public void setPlayerId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>player_sessions.player_id</code>.
     */
    public Integer getPlayerId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>player_sessions.server_id</code>.
     */
    public void setServerId(Short value) {
        set(1, value);
    }

    /**
     * Getter for <code>player_sessions.server_id</code>.
     */
    public Short getServerId() {
        return (Short) get(1);
    }

    /**
     * Setter for <code>player_sessions.join</code>.
     */
    public void setJoin(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>player_sessions.join</code>.
     */
    public Long getJoin() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>player_sessions.leave</code>.
     */
    public void setLeave(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>player_sessions.leave</code>.
     */
    public Long getLeave() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>player_sessions.range</code>.
     */
    public void setRange(Range<Long> value) {
        set(4, value);
    }

    /**
     * Getter for <code>player_sessions.range</code>.
     */
    public Range<Long> getRange() {
        return (Range<Long>) get(4);
    }

    /**
     * Setter for <code>player_sessions.legacy</code>.
     */
    public void setLegacy(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>player_sessions.legacy</code>.
     */
    public Boolean getLegacy() {
        return (Boolean) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Short, Long, Long, Range<Long>, Boolean> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, Short, Long, Long, Range<Long>, Boolean> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return PlayerSessions.PLAYER_SESSIONS.PLAYER_ID;
    }

    @Override
    public Field<Short> field2() {
        return PlayerSessions.PLAYER_SESSIONS.SERVER_ID;
    }

    @Override
    public Field<Long> field3() {
        return PlayerSessions.PLAYER_SESSIONS.JOIN;
    }

    @Override
    public Field<Long> field4() {
        return PlayerSessions.PLAYER_SESSIONS.LEAVE;
    }

    @Override
    public Field<Range<Long>> field5() {
        return PlayerSessions.PLAYER_SESSIONS.RANGE;
    }

    @Override
    public Field<Boolean> field6() {
        return PlayerSessions.PLAYER_SESSIONS.LEGACY;
    }

    @Override
    public Integer component1() {
        return getPlayerId();
    }

    @Override
    public Short component2() {
        return getServerId();
    }

    @Override
    public Long component3() {
        return getJoin();
    }

    @Override
    public Long component4() {
        return getLeave();
    }

    @Override
    public Range<Long> component5() {
        return getRange();
    }

    @Override
    public Boolean component6() {
        return getLegacy();
    }

    @Override
    public Integer value1() {
        return getPlayerId();
    }

    @Override
    public Short value2() {
        return getServerId();
    }

    @Override
    public Long value3() {
        return getJoin();
    }

    @Override
    public Long value4() {
        return getLeave();
    }

    @Override
    public Range<Long> value5() {
        return getRange();
    }

    @Override
    public Boolean value6() {
        return getLegacy();
    }

    @Override
    public PlayerSessionsRecord value1(Integer value) {
        setPlayerId(value);
        return this;
    }

    @Override
    public PlayerSessionsRecord value2(Short value) {
        setServerId(value);
        return this;
    }

    @Override
    public PlayerSessionsRecord value3(Long value) {
        setJoin(value);
        return this;
    }

    @Override
    public PlayerSessionsRecord value4(Long value) {
        setLeave(value);
        return this;
    }

    @Override
    public PlayerSessionsRecord value5(Range<Long> value) {
        setRange(value);
        return this;
    }

    @Override
    public PlayerSessionsRecord value6(Boolean value) {
        setLegacy(value);
        return this;
    }

    @Override
    public PlayerSessionsRecord values(Integer value1, Short value2, Long value3, Long value4, Range<Long> value5, Boolean value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlayerSessionsRecord
     */
    public PlayerSessionsRecord() {
        super(PlayerSessions.PLAYER_SESSIONS);
    }

    /**
     * Create a detached, initialised PlayerSessionsRecord
     */
    public PlayerSessionsRecord(Integer playerId, Short serverId, Long join, Long leave, Range<Long> range, Boolean legacy) {
        super(PlayerSessions.PLAYER_SESSIONS);

        set(0, playerId);
        set(1, serverId);
        set(2, join);
        set(3, leave);
        set(4, range);
        set(5, legacy);
    }
}
